// Generated by CoffeeScript 1.6.3
(function() {
  var ResponsiveRule, invokeRules, rules;

  rules = [];

  ResponsiveRule = (function() {
    function ResponsiveRule(minWidth, maxWidth, callback) {
      this.callback = callback;
      this.minWidth = minWidth;
      this.maxWidth = maxWidth;
    }

    ResponsiveRule.prototype.invoke = function(width) {
      var isApplied, shouldBeApplied;
      shouldBeApplied = (this.minWidth === 0 || this.minWidth <= width) && (this.maxWidth === 0 || this.maxWidth >= width);
      if (isApplied && shouldBeApplied) {
        return;
      }
      if (shouldBeApplied) {
        this.callback(width, this.minWidth, this.maxWidth);
        return isApplied = true;
      } else {
        return isApplied = false;
      }
    };

    return ResponsiveRule;

  })();

  invokeRules = function() {
    var rule, width, _i, _len, _results;
    width = document.documentElement.clientWidth;
    _results = [];
    for (_i = 0, _len = rules.length; _i < _len; _i++) {
      rule = rules[_i];
      _results.push(rule.invoke(width));
    }
    return _results;
  };

  $.responsive = {
    rule: function(minWidth, maxWidth, callback) {
      var rule, width;
      rule = new ResponsiveRule(minWidth, maxWidth, callback);
      rules.push(rule);
      width = document.documentElement.clientWidth;
      return $(function() {
        return rule.invoke(width);
      });
    }
  };

  $(window).resize(invokeRules);

  $(window).ready(invokeRules);

}).call(this);
